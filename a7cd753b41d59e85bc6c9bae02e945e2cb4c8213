{
  "comments": [
    {
      "key": {
        "uuid": "fc47799a_0c1ce3c7",
        "filename": "POLICY-SDK-APP/src/test/java/org/onap/policy/daoImp/CommonClassDaoImplTest.java",
        "patchSetId": 2
      },
      "lineNbr": 103,
      "author": {
        "id": 811
      },
      "writtenOn": "2019-12-02T18:09:45Z",
      "side": 1,
      "message": "not needed.  The only way this could be false is if \"sf\" is null.  If that\u0027s possible, then this test should be replaced with assertNotNull.  Otherwise, it should be eliminated altogether.",
      "revId": "a7cd753b41d59e85bc6c9bae02e945e2cb4c8213",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d196ae2a_1318341d",
        "filename": "POLICY-SDK-APP/src/test/java/org/onap/policy/daoImp/CommonClassDaoImplTest.java",
        "patchSetId": 2
      },
      "lineNbr": 103,
      "author": {
        "id": 477
      },
      "writtenOn": "2019-12-02T20:05:25Z",
      "side": 1,
      "message": "adding to it the assertNotNull could have 102,103 in the same line if sf is not used later on so to get it out of scope, plain eyeballing it, don\u0027t see it being used, but could be missing it.",
      "parentUuid": "fc47799a_0c1ce3c7",
      "revId": "a7cd753b41d59e85bc6c9bae02e945e2cb4c8213",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "452588ab_a72eb312",
        "filename": "POLICY-SDK-APP/src/test/java/org/onap/policy/daoImp/CommonClassDaoImplTest.java",
        "patchSetId": 2
      },
      "lineNbr": 467,
      "author": {
        "id": 811
      },
      "writtenOn": "2019-12-02T18:09:45Z",
      "side": 1,
      "message": "is this needed?",
      "revId": "a7cd753b41d59e85bc6c9bae02e945e2cb4c8213",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "76f556f0_59a6c5cf",
        "filename": "POLICY-SDK-APP/src/test/java/org/onap/policy/daoImp/CommonClassDaoImplTest.java",
        "patchSetId": 2
      },
      "lineNbr": 486,
      "author": {
        "id": 477
      },
      "writtenOn": "2019-12-02T20:05:25Z",
      "side": 1,
      "message": "I think you should be able to use List\u003c?\u003e here instead of List\u003cObject\u003e to bring the code more to java 8+.   General comment.   If you decide to make that change, check if the @SupressWarnings is still needed.",
      "revId": "a7cd753b41d59e85bc6c9bae02e945e2cb4c8213",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43d7f00f_b3f68699",
        "filename": "POLICY-SDK-APP/src/test/java/org/onap/policy/daoImp/SystemLogDbDaoImplTest.java",
        "patchSetId": 2
      },
      "lineNbr": 45,
      "author": {
        "id": 811
      },
      "writtenOn": "2019-12-02T18:09:45Z",
      "side": 1,
      "message": "is this needed?",
      "revId": "a7cd753b41d59e85bc6c9bae02e945e2cb4c8213",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e3794007_bed716fa",
        "filename": "POLICY-SDK-APP/src/test/java/org/onap/policy/daoImp/SystemLogDbDaoImplTest.java",
        "patchSetId": 2
      },
      "lineNbr": 56,
      "author": {
        "id": 57
      },
      "writtenOn": "2019-12-02T18:33:58Z",
      "side": 1,
      "message": "Hmm - I thought this would be the opposite.",
      "range": {
        "startLine": 56,
        "startChar": 34,
        "endLine": 56,
        "endChar": 39
      },
      "revId": "a7cd753b41d59e85bc6c9bae02e945e2cb4c8213",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "27d3f128_ea571111",
        "filename": "POLICY-SDK-APP/src/test/java/org/onap/policy/daoImp/SystemLogDbDaoImplTest.java",
        "patchSetId": 2
      },
      "lineNbr": 73,
      "author": {
        "id": 477
      },
      "writtenOn": "2019-12-02T20:05:25Z",
      "side": 1,
      "message": "Following up on Pam\u0027s comment above, question if the before|after Class booleans in setjUnit should be reversed, here doesn\u0027t seem right neither.",
      "revId": "a7cd753b41d59e85bc6c9bae02e945e2cb4c8213",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    }
  ]
}