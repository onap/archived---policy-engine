<!--
  ============LICENSE_START=======================================================
  ONAP Policy Engine
  ================================================================================
  Copyright (C) 2017, 2020 AT&T Intellectual Property. All rights reserved.
  ================================================================================
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  ============LICENSE_END=========================================================
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.onap.policy.engine</groupId>
		<artifactId>packages</artifactId>
		<version>1.6.6-SNAPSHOT</version>
	</parent>

	<artifactId>base</artifactId>
	<packaging>pom</packaging>

	<name>Base Package</name>
	<description>D2 ONAP Policy Base Packaging</description>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-pdp</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/pdp/webapps</outputDirectory>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>true</overWriteSnapshots>
							<artifactItems>
								<artifactItem>
									<groupId>org.onap.policy.engine</groupId>
									<artifactId>ONAP-PDP-REST</artifactId>
									<version>${project.version}</version>
									<type>war</type>
									<destFileName>pdp.war</destFileName>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
					<execution>
						<id>copy-pap</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/pap/webapps</outputDirectory>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>true</overWriteSnapshots>
							<artifactItems>
								<artifactItem>
									<groupId>org.onap.policy.engine</groupId>
									<artifactId>ONAP-PAP-REST</artifactId>
									<version>${project.version}</version>
									<type>war</type>
									<destFileName>pap.war</destFileName>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
					<execution>
						<id>copy-onap</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/console/webapps</outputDirectory>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>true</overWriteSnapshots>
							<artifactItems>
								<artifactItem>
									<groupId>org.onap.policy.engine</groupId>
									<artifactId>ONAP-SDK-APP</artifactId>
									<version>${project.version}</version>
									<type>war</type>
									<destFileName>onap.war</destFileName>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
					<execution>
						<id>copy-tomcat-binary</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/install/3rdparty/</outputDirectory>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>true</overWriteSnapshots>
							<artifactItems>
								<artifactItem>
									<groupId>org.apache.tomcat</groupId>
									<artifactId>tomcat</artifactId>
									<version>9.0.37</version>
									<type>tar.gz</type>
									<!--
									Please note that if you change this version, you must
									update the docker-install.sh script to ensure the right
									file name is installed. 
									 -->
									<destFileName>apache-tomcat-9.0.37.tar.gz</destFileName>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
					<execution>
						<id>copy-brmsgw</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/brmsgw</outputDirectory>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>true</overWriteSnapshots>
							<artifactItems>
								<artifactItem>
									<groupId>org.onap.policy.engine</groupId>
									<artifactId>BRMSGateway</artifactId>
									<version>${project.version}</version>
									<type>jar</type>
									<classifier>jar-with-dependencies</classifier>
									<destFileName>BRMSGateway.jar</destFileName>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
					<execution>
						<id>copy-logparser</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/logparser</outputDirectory>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>true</overWriteSnapshots>
							<artifactItems>
								<artifactItem>
									<groupId>org.onap.policy.engine</groupId>
									<artifactId>LogParser</artifactId>
									<version>${project.version}</version>
									<type>jar</type>
									<classifier>jar-with-dependencies</classifier>
									<destFileName>logparser.jar</destFileName>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>single</goal>
						</goals>
						<phase>package</phase>
						<configuration>
							<descriptors>
								<descriptor>src/assembly/zip.xml</descriptor>
							</descriptors>
							<appendAssemblyId>false</appendAssemblyId>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>unix_pe_version</id>
			<activation>
				<os>
					<family>!windows</family>
				</os>
			</activation>
			<build>
				<plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>1.5.0</version>
                        <executions>
                            <execution>
                                <id>create-version-file</id>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <phase>prepare-package</phase>
                                <configuration>
                                    <executable>/bin/bash</executable>
                                    <arguments>
                                        <argument>-c</argument>
                                        <argument>mkdir -p target ; echo -e 'version="${project.version}"\ndescription="Open ONAP Policy Engine"\nbuildTag="'"${BUILD_TAG}"'"\ncommit="'"${GIT_COMMIT}"'"\ntimestamp="${maven.build.timestamp}"' &gt;target/build.info</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
			</build>
		</profile>
	</profiles>

</project>
