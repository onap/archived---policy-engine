###
# ============LICENSE_START=======================================================
# ECOMP Policy Engine
# ================================================================================
# Copyright (C) 2017 AT&T Intellectual Property. All rights reserved.
# ================================================================================
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#      http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ============LICENSE_END=========================================================
###

#
# This file is set to the defaults one can use to run the XACML-PAP-ADMIN for testing and development.
#
# It is not recommended to modify this file directly, but rather copy it to another location and make any modifications
# necessary to run the application in a development or a production environment. You can set the Java VM System
# property to change where the application can find the file. For example:
#
#-Dxacml.properties=/opt/app/xacml/etc/xacml.admin.properties 
#
#
# Standard API Factories
#
xacml.dataTypeFactory=com.att.research.xacml.std.StdDataTypeFactory
xacml.pdpEngineFactory=com.att.research.xacmlatt.pdp.ATTPDPEngineFactory
xacml.pepEngineFactory=com.att.research.xacml.std.pep.StdEngineFactory
xacml.pipFinderFactory=com.att.research.xacml.std.pip.StdPIPFinderFactory
#
# AT&T PDP Implementation Factories
#
xacml.att.evaluationContextFactory=com.att.research.xacmlatt.pdp.std.StdEvaluationContextFactory
xacml.att.combiningAlgorithmFactory=com.att.research.xacmlatt.pdp.std.StdCombiningAlgorithmFactory
xacml.att.functionDefinitionFactory=org.openecomp.policy.xacml.custom.EcompFunctionDefinitionFactory
xacml.att.policyFinderFactory=com.att.research.xacmlatt.pdp.std.StdPolicyFinderFactory
#
# Policy Adapter Implementation class 
#
policyAdapter.impl.className = org.openecomp.policy.admin.PolicyAdapter

#
# This is an extremely simple policy to demonstrate authorization
# within the Admin Console.
#
xacml.rootPolicies=${{ROOT_POLICIES}}
admin.file=${{ADMIN_FILE}}

#
# PAP Servlet properties
#
xacml.PAP.papEngineFactory=org.openecomp.policy.xacml.std.pap.StdEngineFactory

#
# Admin Console properties
#
xacml.AC.papEngineFactory=org.openecomp.policy.xacml.admin.util.RESTfulPAPFactory

# Set your domain here:

xacml.rest.admin.domain=${{REST_ADMIN_DOMAIN}}
#
# Location where the GIT repository is located
#
xacml.rest.admin.repository=${{REST_ADMIN_REPOSITORY}}
#
# Location where all the user workspaces are located.
#
xacml.rest.admin.workspace=${{REST_ADMIN_WORKSPACE}}


xacml.rest.admin.closedLoopJSON =JSONConfig.json
xacml.rest.admin.microServiceModel=model.properties
xacm.restful.interface.file=RESTful.interface.properties
#
#
# Property to declare the max time frame for logs.
#
xacml.log.timeframe=${{LOG_TIMEFRAME}}

#Log DB information
xacml.log.db.driver=${{JDBC_DRIVER}}
xacml.log.db.url=${{JDBC_LOG_URL}}
xacml.log.db.user=${{JDBC_USER}}
xacml.log.db.password=${{JDBC_PASSWORD}}

# Dashboard refresh rate in miliseconds
xacml.refresh.rate=${{REFRESH_RATE}}

# Number of visable rows for users in MicroService Policy
xacml.user.column.count=${{COLUMN_COUNT}}

#the page length for the sqlcontainer used on Dashbaord
xacml.sqlcontainer.page.length=75

#Patter to identify if a attribute is ready. Currently just a place holder
xacm.xcor.required.pattern=1,1

#The time to hold the cache of values for the attributes retrieved from Remote dictionary
xacm.cache.live.time=2

#The largest value that priority can be set in on the UI
xacml.max.priority.count=10
#The max Model Leve Displayed on the UI
xacml.model.level=4
#
# These can be set so the Admin Console knows who is logged on. Ideally, you can run the console in a J2EE
# container and setup authentication as you please. Setting HttpSession attribute values will override these
# values set in the properties files.
#
# ((HttpServletRequest) request).getSession().setAttribute("xacml.rest.admin.user.name", "Homer");
#
# The default policy: Policy-Admin.xml is extremely simple.
#
# You can test authorization within the Admin Console by changing the user id.
# There are 3 supported user ids:
#	guest - Read only access
#	editor - Read/Write access
#	admin - Read/Write/Admin access
#
# An empty or null value for xacml.rest.admin.user.id results in no access to the application at all.
#
# This is for development/demonstration purposes only. A production environment should provide authentication which is
# outside the scope of this application. This application can be used to develop a XACML policy for user authorization
# within this application.
#

xacml.rest.admin.user.name=${{REST_ADMIN_USER_NAME}}
xacml.rest.admin.user.id=${{REST_ADMIN_USER_ID}}
xacml.rest.admin.user.email=

#
# URL location for the PAP servlet.
#

xacml.rest.pap.url=${{REST_PAP_URL}}

xacml.rest.config.home=${{REST_CONFIG_HOME}}
xacml.rest.action.home=${{REST_ACTION_HOME}}
xacml.rest.config.url=${{REST_CONFIG_URL}}
xacml.rest.config.webapps=${{REST_CONFIG_WEBAPPS}}

# PAP account information
xacml.rest.pap.userid=${{CONSOLE_PAP_HTTP_USER_ID}}
xacml.rest.pap.password=${{CONSOLE_PAP_HTTP_PASSWORD}}

# pdps file - Needs to have the location of the PDPs File of the PAP-REST
xacml.rest.pdp.idfile=${{POLICY_HOME}}/servers/pap/bin/test.properties

#Template Versions
xacml.rest.closedLoopFault=OpenSource.version.1
xacml.rest.closedLoopPM=OpenSource.version.1
xacml.rest.microServices=OpenSource.version.1
xacml.rest.firewallPolicy=OpenSource.version.1

#***Properties for IntegrityMonitor integration defined in XACMLRestProperties.java***
#The name of the Admin.  Must be unique across the system
xacml.rest.admin.resource.name=${{resource_name}}

#***Properties for IntegrityMonitor integration defined in IntegrityMonitorProperties.java***
site_name=${{site_name}}
node_type=${{node_type}}
fp_monitor_interval=${{fp_monitor_interval}}
failed_counter_threshold=${{failed_counter_threshold}}
test_trans_interval=${{test_trans_interval}}
write_fpc_interval=${{write_fpc_interval}}
max_fpc_update_interval=${{max_fpc_update_interval}}
test_via_jmx=${{test_via_jmx}}

# The (optional) period of time in seconds between executions of the integrity audit.
# Value < 0 : Audit does not run (default value if property is not present = -1)
# Value = 0 : Audit runs continuously
# Value > 0 : The period of time in seconds between execution of the audit on a particular node
integrity_audit_period_seconds=${{integrity_audit_period_seconds}}

#Automatic Policy Distribution 
xacml.att.automatic.push = ${{automatic_push}}


#Dashboard Tab Limit
xacml.ecomp.dashboard.logTableLimit = 5000
xacml.ecomp.dashboard.systemAlertTableLimit = 2000                                     

#Diff of policies for Firewall feature
FW_GETURL=${{FW_GETURL}}
FW_AUTHOURL=${{FW_AUTHOURL}}
FW_PROXY=${{FW_PROXY}}
FW_PORT=${{FW_PORT}}

#SMTP Server Details for Java Mail
ecomp.smtp.host = ${{ecomp_smtp_host}}
ecomp.smtp.port = ${{ecomp_smtp_port}}
ecomp.smtp.userName = ${{ecomp_smtp_userName}}
ecomp.smtp.password = ${{ecomp_smtp_password}}
ecomp.smtp.emailExtension=${{ecomp_smtp_emailExtension}}
ecomp.application.name = ${{ecomp_application_name}}

#Dialect for Database
ecomp.dialect = org.hibernate.dialect.MySQLDialect

#Micro Service Model Properties
xacml.policy.msEcompName=${{policy_msEcompName}}
xacml.policy.msPolicyName=${{policy_msPolicyName}}